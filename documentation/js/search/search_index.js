var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.209,1,2.333]],["body/controllers/AppController.html",[0,1.425,1,3.553,2,1.425,3,0.259,4,0.259,5,0.225,6,3.46,7,2.307,8,3.054,9,0.524,10,1.73,11,5.232,12,1.425,13,0.024,14,4.076,15,4.469,16,5.265,17,3.945,18,5.265,19,0.658,20,4.076,21,1.339,22,1.19,23,0.523,24,0.809,25,2.98,26,2.307,27,1.112,28,3.301,29,3.46,30,4.076,31,4.076,32,0.259,33,0.164,34,1.619,35,1.518,36,4.076,37,2.307,38,1.339,39,4.076,40,0.018,41,0.018]],["title/modules/AppModule.html",[42,1.136,43,2.333]],["body/modules/AppModule.html",[1,3.519,2,1.587,3,0.207,4,0.207,5,0.181,13,0.024,23,0.584,24,0.648,28,3.469,29,2.772,32,0.207,33,0.131,40,0.015,41,0.015,42,1.491,43,4.684,44,1.385,45,1.924,46,2.772,47,2.772,48,2.772,49,3.772,50,3.772,51,2.599,52,3.772,53,3.772,54,3.772,55,2.208,56,1.589,57,1.589,58,3.266,59,2.376,60,2.568,61,3.266,62,3.266,63,3.266,64,3.266,65,3.266,66,3.266,67,3.266]],["title/injectables/AppService.html",[28,1.956,68,0.943]],["body/injectables/AppService.html",[3,0.287,4,0.287,5,0.25,9,0.58,10,1.845,11,5.431,13,0.024,19,0.729,21,1.483,22,1.27,23,0.405,24,0.896,28,3.179,32,0.287,33,0.182,38,1.483,40,0.019,41,0.019,68,1.533,69,2.048,70,3.832,71,4.514,72,4.514,73,4.514,74,4.514,75,4.514,76,4.514,77,4.514,78,4.514,79,3.382,80,3.832]],["title/controllers/AuthController.html",[0,1.209,81,2.333]],["body/controllers/AuthController.html",[0,1.078,2,1.078,3,0.196,4,0.196,5,0.171,7,1.745,9,0.396,10,1.432,12,1.524,13,0.024,19,0.704,21,1.432,23,0.567,24,0.612,25,2.862,26,1.745,27,0.841,32,0.196,33,0.124,34,1.225,35,1.149,37,2.467,38,1.432,40,0.015,41,0.015,81,2.942,82,2.617,83,3.084,84,3.7,85,4.359,86,2.617,87,3.382,88,3.084,89,4.359,90,4.359,91,4.359,92,3.084,93,3.084,94,1.524,95,1.189,96,0.704,97,1.189,98,2.121,99,2.467,100,3.084,101,2.21,102,3.084,103,4.359,104,2.283,105,2.283,106,3.084,107,3.084,108,1.898,109,2.31,110,2.31,111,2.683,112,1.898,113,1.898,114,1.149,115,2.683,116,2.081,117,2.862,118,2.617,119,2.081,120,3.084,121,3.084,122,2.617,123,2.081,124,3.084,125,2.617,126,3.084,127,3.084,128,2.31,129,3.084,130,3.084,131,3.084,132,1.898,133,3.084,134,3.084]],["title/modules/AuthModule.html",[42,1.136,49,2.127]],["body/modules/AuthModule.html",[2,1.685,3,0.226,4,0.226,5,0.197,13,0.024,23,0.577,24,0.708,32,0.226,33,0.143,40,0.016,41,0.016,42,1.583,44,1.512,45,2.043,49,4.127,51,2.669,55,2.345,56,1.735,57,1.735,59,2.523,60,2.727,81,3.684,114,1.328,117,3.563,118,3.026,135,3.026,136,3.565,137,3.026,138,3.874,139,3.565,140,3.565,141,2.194,142,3.565,143,2.671,144,2.194,145,3.565,146,2.194,147,2.194,148,1.735,149,3.565,150,3.565,151,3.026,152,3.565,153,3.565,154,3.565]],["title/injectables/AuthService.html",[68,0.943,117,1.956]],["body/injectables/AuthService.html",[3,0.2,4,0.2,5,0.174,9,0.405,10,1.453,13,0.024,19,0.714,21,1.034,23,0.524,24,0.625,32,0.2,33,0.127,35,1.647,38,1.034,40,0.015,41,0.015,68,1.207,69,1.428,84,3.754,86,3.754,87,3.413,94,1.547,95,1.395,96,0.714,97,1.207,98,2.152,101,1.788,117,2.504,122,2.672,128,2.359,143,2.359,155,2.672,156,2.32,157,2.504,158,1.782,159,2.203,160,6.223,161,3.148,162,2.316,163,3.148,164,2.125,165,3.148,166,2.125,167,1.782,168,3.314,169,3.754,170,2.316,171,2.904,172,2.722,173,2.007,174,2.359,175,2.359,176,3.743,177,1.649,178,2.722,179,2.504,180,3.148,181,3.148,182,3.148,183,3.314,184,1.428,185,3.148,186,3.148,187,3.148]],["title/classes/CreateOrderDto.html",[33,0.139,188,2.127]],["body/classes/CreateOrderDto.html",[3,0.204,4,0.204,5,0.177,9,0.412,12,1.567,13,0.024,17,3.356,19,0.723,23,0.501,27,0.875,32,0.204,33,0.208,40,0.015,41,0.015,96,0.903,104,2.346,105,2.346,176,2.163,188,2.757,189,0.99,190,3.869,191,2.721,192,1.472,193,3.869,194,5.164,195,3.773,196,3.206,197,3.206,198,4.48,199,2.346,200,4.48,201,3.023,202,1.472,203,3.023,204,3.802,205,3.356,206,3.356,207,2.927,208,3.206,209,3.206,210,2.346,211,1.679,212,3.802,213,3.356,214,2.536,215,4.48,216,3.802,217,3.206,218,3.206,219,2.704,220,2.721,221,3.802,222,4.48,223,1.679,224,1.194,225,1.815,226,2.163,227,2.051,228,3.356,229,3.206,230,2.721,231,2.721,232,2.721,233,2.721,234,2.721,235,2.721,236,2.402,237,2.402,238,2.721,239,2.721]],["title/classes/CreateOrderProductDto.html",[33,0.139,195,2.333]],["body/classes/CreateOrderProductDto.html",[3,0.215,4,0.215,5,0.187,9,0.435,12,1.857,13,0.023,19,0.858,22,1.293,23,0.417,27,0.923,32,0.215,33,0.187,40,0.016,41,0.016,96,0.858,189,1.044,190,4.285,192,1.527,195,3.137,202,1.527,203,3.86,204,3.945,206,3.483,207,3.244,210,2.434,211,2.434,219,2.995,221,3.945,223,1.771,225,3.237,227,2.461,228,2.533,230,4.508,231,3.945,232,3.945,233,3.945,234,3.945,235,3.945,236,3.98,237,3.483,238,3.945,239,2.87,240,2.282,241,4.648,242,3.381,243,3.381,244,3.381,245,2.87,246,3.381,247,3.381,248,3.945,249,3.137,250,4.648]],["title/classes/CreateProductDto.html",[33,0.139,251,1.956]],["body/classes/CreateProductDto.html",[3,0.191,4,0.191,5,0.167,9,0.387,12,1.902,13,0.023,19,0.878,22,1.35,23,0.384,27,0.822,32,0.191,33,0.173,40,0.015,41,0.015,95,1.362,96,0.878,177,2.614,189,0.93,192,1.409,199,2.848,201,2.894,203,4.239,205,3.213,206,3.213,207,3.289,210,2.245,211,2.848,219,3.009,223,1.578,227,2.441,237,3.213,240,2.033,245,2.557,249,3.369,251,2.427,252,4.878,253,4.237,254,4.288,255,5.438,256,4.288,257,3.013,258,3.013,259,4.288,260,3.213,261,4.288,262,4.288,263,4.288,264,3.013,265,3.013,266,3.64,267,3.013,268,4.288,269,4.288,270,3.013,271,3.013,272,3.64,273,3.64,274,2.557,275,3.013,276,3.013,277,3.013,278,3.013,279,2.557,280,3.013]],["title/classes/CreateTableDto.html",[33,0.139,281,1.956]],["body/classes/CreateTableDto.html",[3,0.271,4,0.271,5,0.236,9,0.547,12,1.489,13,0.024,17,4.057,19,0.687,23,0.485,27,1.162,32,0.271,33,0.218,40,0.018,41,0.018,96,0.687,104,2.835,189,1.315,192,1.779,207,2.835,210,3.387,211,2.23,212,4.596,213,4.057,219,2.835,223,2.23,227,1.691,228,3.19,248,4.596,272,4.596,281,3.065,282,4.596,283,3.19,284,4.258,285,4.258]],["title/classes/CreateUserDto.html",[33,0.139,286,1.956]],["body/classes/CreateUserDto.html",[3,0.179,4,0.179,5,0.156,9,0.362,12,1.958,13,0.024,19,0.904,22,1.444,23,0.367,27,0.769,32,0.179,33,0.164,40,0.014,41,0.014,95,1.312,96,0.904,105,3.231,171,2.518,172,2.96,177,2.518,189,0.87,192,1.343,199,2.141,207,3.345,211,2.932,219,3.058,223,1.476,227,2.224,249,3.56,266,3.47,273,3.47,274,2.393,286,2.314,287,4.957,288,2.112,289,4.082,290,3.47,291,4.623,292,4.088,293,3.47,294,4.088,295,2.819,296,2.819,297,4.088,298,2.819,299,2.819,300,4.088,301,2.819,302,2.819,303,4.088,304,2.819,305,2.819,306,2.819,307,4.088,308,4.088,309,4.088,310,4.088,311,4.088,312,2.819,313,2.819,314,2.393,315,2.819,316,3.47,317,2.819,318,2.819,319,2.819]],["title/injectables/JwtStrategy.html",[68,0.943,138,2.127]],["body/injectables/JwtStrategy.html",[3,0.214,4,0.214,5,0.186,9,0.433,10,1.524,13,0.024,19,0.749,21,1.107,22,0.762,23,0.512,24,0.669,32,0.214,33,0.136,34,1.339,35,1.255,38,1.107,40,0.016,41,0.016,68,1.266,69,1.529,94,1.622,95,1.266,96,0.922,97,1.266,101,1.854,105,1.765,114,1.255,138,2.854,148,1.64,151,2.861,156,2.406,157,1.908,158,1.908,159,2.268,162,2.429,164,2.274,167,1.908,170,1.765,171,2.429,173,1.529,174,2.525,178,2.074,179,1.908,183,2.525,184,1.529,320,2.861,321,4.638,322,3.37,323,4.638,324,4.638,325,3.37,326,3.37,327,4.638,328,3.37,329,3.37,330,3.37,331,2.861,332,2.074,333,3.37,334,3.37,335,3.37,336,3.37,337,3.37,338,2.861,339,3.37,340,3.37,341,3.13,342,3.37,343,3.37,344,3.37,345,3.37]],["title/classes/LoginDto.html",[33,0.139,87,2.127]],["body/classes/LoginDto.html",[3,0.249,4,0.249,5,0.217,9,0.504,12,1.796,13,0.024,19,0.829,22,1.373,23,0.461,27,1.071,32,0.249,33,0.207,40,0.017,41,0.017,87,3.161,96,0.829,105,3.181,171,3.302,172,3.524,189,1.212,192,1.688,207,3.181,211,2.055,219,2.999,223,2.055,227,2.04,249,3.864,291,3.848,314,3.331,316,4.36,346,3.331,347,5.137,348,3.924,349,3.924,350,3.924,351,3.924,352,5.726]],["title/classes/LoginResponseDto.html",[33,0.139,119,2.333]],["body/classes/LoginResponseDto.html",[3,0.243,4,0.243,5,0.212,9,0.492,12,1.766,13,0.024,19,0.815,22,1.142,23,0.453,27,1.044,32,0.243,33,0.154,40,0.017,41,0.017,96,0.815,101,2.246,104,3.149,105,2.645,116,2.581,119,3.408,128,4.685,148,2.457,189,1.181,192,1.659,207,2.645,211,2.645,219,2.961,227,2.006,260,3.784,353,4.8,354,3.246,355,6.014,356,5.05,357,5.05,358,5.05,359,3.824,360,5.05,361,5.05,362,3.824]],["title/classes/Order.html",[33,0.139,225,1.956]],["body/classes/Order.html",[3,0.234,4,0.234,5,0.204,9,0.474,13,0.024,19,1.027,22,1.115,23,0.498,32,0.234,33,0.148,40,0.017,41,0.017,96,1.027,97,1.87,101,2.223,116,2.49,189,1.139,192,1.62,193,4.162,202,1.825,225,2.791,363,3.132,364,3.749,365,3.33,366,3.749,367,4.442,368,3.69,369,3.69,370,2.909,371,3.69,372,3.69,373,3.69,374,3.69,375,3.69,376,3.69]],["title/controllers/OrderController.html",[0,1.209,377,2.333]],["body/controllers/OrderController.html",[0,1.01,2,1.01,3,0.184,4,0.184,5,0.16,7,1.635,9,0.371,10,1.367,12,1.705,13,0.024,15,4.528,19,0.787,21,1.602,22,1.102,23,0.544,24,0.573,25,3.02,26,1.635,27,0.788,32,0.184,33,0.116,34,1.147,35,1.076,37,2.76,38,1.602,40,0.014,41,0.014,94,1.455,95,1.135,96,0.672,97,1.135,101,2.059,108,2.561,111,2.561,112,1.778,113,1.778,114,1.076,115,2.561,116,1.949,123,1.949,125,2.452,132,1.778,188,3.823,202,1.367,216,4.139,224,1.55,225,1.635,377,2.808,378,2.452,379,2.596,380,2.025,381,2.889,382,3.291,383,2.808,384,3.117,385,3.117,386,2.889,387,2.889,388,2.808,389,2.808,390,2.889,391,2.889,392,1.406,393,2.889,394,2.889,395,1.949,396,2.76,397,2.452,398,1.406,399,2.452,400,2.164,401,2.889,402,2.889,403,2.889,404,2.889,405,2.889,406,2.889,407,2.452,408,1.949,409,1.949,410,2.889]],["title/modules/OrderModule.html",[42,1.136,50,2.127]],["body/modules/OrderModule.html",[2,1.805,3,0.251,4,0.251,5,0.219,13,0.024,23,0.567,24,0.785,32,0.251,33,0.159,40,0.017,41,0.017,42,1.696,44,1.677,45,2.189,50,4.121,51,2.749,55,2.512,56,1.924,57,1.924,59,2.703,60,2.922,114,1.473,141,2.433,144,2.433,146,2.433,147,2.433,148,1.924,377,3.879,396,3.669,397,3.356,411,3.356,412,3.356,413,3.954,414,3.954,415,3.954]],["title/injectables/OrderService.html",[68,0.943,396,1.956]],["body/injectables/OrderService.html",[3,0.144,4,0.144,5,0.125,9,0.291,10,1.141,13,0.025,19,0.764,21,1.387,22,1.218,23,0.458,24,0.45,32,0.144,33,0.091,34,0.9,35,0.844,38,1.387,40,0.012,41,0.012,68,0.948,69,1.028,94,1.477,95,1.47,96,0.682,97,1.152,98,2.055,101,1.655,156,1.916,157,1.282,158,1.282,159,1.88,162,2.211,164,1.529,167,1.282,170,1.186,171,2.211,173,1.028,175,4.738,176,4.452,177,1.186,188,2.914,193,3.547,202,1.9,210,2.479,224,1.573,227,0.9,236,1.698,365,2.479,370,1.819,379,2.304,380,1.69,392,1.69,396,1.966,398,1.103,399,1.923,416,1.923,417,2.266,418,3.473,419,2.266,420,3.473,421,2.266,422,2.266,423,1.529,424,1.282,425,1.282,426,1.529,427,2.85,428,2.266,429,3.473,430,2.266,431,2.266,432,2.266,433,2.266,434,2.266,435,2.266,436,2.266,437,2.266,438,2.266]],["title/modules/PrismaModule.html",[42,1.136,51,1.466]],["body/modules/PrismaModule.html",[3,0.275,4,0.275,5,0.239,13,0.023,23,0.491,24,0.859,32,0.275,33,0.174,40,0.019,41,0.019,42,1.797,44,1.836,45,2.32,51,2.859,55,2.662,56,2.106,57,2.106,59,2.865,159,2.786,439,3.674,440,3.674,441,3.674,442,4.328,443,5.471,444,4.328]],["title/injectables/PrismaService.html",[68,0.943,159,1.373]],["body/injectables/PrismaService.html",[3,0.249,4,0.249,5,0.217,8,2.94,9,0.504,10,1.688,13,0.024,19,0.829,21,1.688,23,0.461,24,0.779,32,0.249,33,0.158,40,0.017,41,0.017,68,1.402,69,1.78,94,1.372,95,1.071,96,0.634,97,1.071,156,2.99,159,2.04,173,2.33,332,3.161,423,2.648,445,3.331,446,5.726,447,5.137,448,6.469,449,5.137,450,6.075,451,3.924,452,3.924,453,3.924,454,3.924,455,3.924,456,3.924]],["title/classes/Product.html",[33,0.139,370,1.81]],["body/classes/Product.html",[3,0.245,4,0.245,5,0.213,9,0.495,13,0.023,19,1.059,22,1.505,32,0.245,33,0.155,40,0.017,41,0.017,95,1.549,96,1.059,97,1.756,177,2.972,189,1.19,192,1.667,202,1.864,210,2.657,227,2.254,253,4.817,364,3.83,366,3.83,367,4.519,370,2.657,457,3.27,458,3.852,459,3.852,460,3.852,461,3.852,462,3.852,463,3.852,464,3.852]],["title/controllers/ProductController.html",[0,1.209,465,2.333]],["body/controllers/ProductController.html",[0,0.764,2,0.764,3,0.139,4,0.139,5,0.121,7,1.237,9,0.281,10,1.11,12,1.756,13,0.024,19,0.811,21,1.65,22,1.326,23,0.496,24,0.434,25,3.005,26,1.237,27,0.596,32,0.139,33,0.088,34,0.868,35,0.814,37,2.842,38,1.526,40,0.011,41,0.011,94,1.624,95,1.268,96,0.75,97,1.268,98,2.26,99,3.453,108,2.079,109,1.638,110,1.638,111,2.079,112,1.345,113,1.345,114,0.814,115,2.079,132,1.345,156,1.873,173,1.533,184,2.107,199,2.432,201,1.475,202,1.818,203,3.135,214,1.237,224,1.538,226,2.28,251,3.005,370,1.769,379,2.26,380,1.644,382,3.389,383,2.28,384,4.284,385,2.531,388,2.28,389,2.28,392,1.064,395,1.475,398,1.064,408,1.475,409,1.475,465,2.28,466,1.855,467,2.629,468,2.186,469,2.186,470,2.186,471,1.237,472,2.531,473,2.186,474,2.186,475,3.48,476,3.48,477,2.186,478,2.186,479,2.186,480,2.186,481,1.237,482,2.859,483,2.531,484,2.186,485,2.186,486,1.638,487,1.237,488,2.186,489,2.337,490,1.855,491,2.186,492,2.186,493,2.186,494,2.186,495,2.186,496,1.638,497,2.186,498,1.855,499,1.638,500,1.638,501,1.638,502,2.867,503,1.855,504,1.855,505,1.855,506,1.855,507,1.855,508,1.855,509,1.855,510,1.855,511,2.186,512,1.638,513,2.186,514,2.186]],["title/modules/ProductModule.html",[42,1.136,52,2.127]],["body/modules/ProductModule.html",[2,1.805,3,0.251,4,0.251,5,0.219,13,0.024,23,0.567,24,0.785,32,0.251,33,0.159,40,0.017,41,0.017,42,1.696,44,1.677,45,2.189,51,2.749,52,4.121,55,2.512,56,1.924,57,1.924,59,2.703,60,2.922,114,1.473,141,2.433,144,2.433,146,2.433,147,2.433,148,1.924,465,3.879,489,3.669,490,3.356,515,3.356,516,3.954,517,3.356,518,3.954,519,3.954]],["title/injectables/ProductService.html",[68,0.943,489,1.956]],["body/injectables/ProductService.html",[3,0.142,4,0.142,5,0.123,9,0.287,10,1.128,13,0.024,19,0.9,21,1.759,22,1.407,23,0.48,24,0.443,32,0.142,33,0.09,34,0.886,35,0.831,38,1.666,40,0.012,41,0.012,68,0.937,69,1.013,94,1.872,95,1.461,96,0.864,97,1.461,98,2.605,99,3.412,104,1.169,156,2.824,157,1.263,158,1.263,159,1.865,162,1.798,166,1.506,167,1.263,170,2.191,173,2.3,178,1.374,179,1.263,184,1.558,202,1.832,214,1.263,224,1.279,226,2.317,251,2.659,341,1.506,370,1.169,379,2.286,380,1.671,392,1.671,398,1.086,423,1.506,424,1.263,425,1.263,426,1.506,427,3.17,467,1.943,471,1.943,481,1.943,482,2.891,487,1.263,489,1.943,520,1.895,521,2.572,522,2.232,523,2.572,524,2.232,525,2.232,526,2.232,527,2.572,528,2.232,529,2.232,530,2.232,531,2.572,532,2.232,533,2.572,534,2.317,535,2.317,536,3.135,537,2.232,538,1.672,539,1.672,540,2.232,541,3.135,542,2.232,543,2.572,544,1.506,545,1.672,546,1.506,547,1.672,548,2.232]],["title/classes/Table.html",[33,0.139,365,1.81]],["body/classes/Table.html",[3,0.298,4,0.298,5,0.26,9,0.604,13,0.023,19,0.929,22,1.301,32,0.298,33,0.189,40,0.019,41,0.019,96,0.929,97,1.571,189,1.45,192,1.891,202,2.045,210,3.486,365,3.014,549,3.986,550,4.696,551,4.696]],["title/controllers/TableController.html",[0,1.209,552,2.333]],["body/controllers/TableController.html",[0,0.771,2,0.771,3,0.14,4,0.14,5,0.122,7,1.247,9,0.283,10,1.117,12,1.763,13,0.024,19,0.814,21,1.656,22,1.33,23,0.498,24,0.437,25,3.015,26,1.247,27,0.601,32,0.14,33,0.089,34,0.875,35,0.821,37,2.853,38,1.533,40,0.012,41,0.012,94,1.632,95,1.273,96,0.753,97,1.273,98,2.27,99,3.461,108,2.092,109,1.651,110,1.651,111,2.092,112,1.356,113,1.356,114,0.821,115,2.092,132,1.356,156,1.883,173,1.543,184,2.117,199,2.443,201,1.487,202,1.824,213,3.777,214,1.247,224,1.546,281,3.015,365,1.78,379,2.27,380,1.654,382,3.402,383,2.294,392,1.072,395,1.487,398,1.072,408,1.487,409,1.487,467,2.349,471,1.247,472,2.547,475,3.496,476,3.496,481,1.247,483,2.547,486,1.651,487,1.247,496,1.651,498,1.871,499,1.651,500,1.651,501,1.651,502,2.886,503,1.871,504,1.871,505,1.871,506,1.871,507,1.871,508,1.871,509,1.871,510,1.871,512,1.651,552,2.294,553,1.871,554,2.204,555,6.008,556,3.4,557,2.204,558,2.204,559,2.204,560,2.204,561,2.204,562,2.204,563,2.204,564,2.204,565,2.872,566,2.204,567,2.204,568,2.547,569,1.871,570,2.349,571,1.871,572,2.204,573,2.204,574,2.204,575,2.204,576,2.204,577,2.204,578,1.871,579,2.204]],["title/modules/TableModule.html",[42,1.136,53,2.127]],["body/modules/TableModule.html",[2,1.805,3,0.251,4,0.251,5,0.219,13,0.024,23,0.567,24,0.785,32,0.251,33,0.159,40,0.017,41,0.017,42,1.696,44,1.677,45,2.189,51,2.749,53,4.121,55,2.512,56,1.924,57,1.924,59,2.703,60,2.922,114,1.473,141,2.433,144,2.433,146,2.433,147,2.433,148,1.924,552,3.879,570,3.669,571,3.356,580,3.356,581,3.954,582,3.356,583,3.954,584,3.954]],["title/injectables/TableService.html",[68,0.943,570,1.956]],["body/injectables/TableService.html",[3,0.141,4,0.141,5,0.123,9,0.286,10,1.124,13,0.024,19,0.899,21,1.756,22,1.406,23,0.479,24,0.441,32,0.141,33,0.089,34,0.883,35,0.828,38,1.663,40,0.012,41,0.012,68,0.934,69,1.008,94,1.869,95,1.459,96,0.863,97,1.459,98,2.601,99,3.408,104,1.164,156,2.821,157,1.258,158,1.258,159,1.861,162,1.792,164,1.5,166,1.5,167,1.258,170,2.185,173,2.296,178,1.368,179,1.258,184,1.553,202,1.829,214,1.258,224,1.275,281,2.653,341,1.5,365,1.792,379,2.281,380,1.665,392,1.665,398,1.082,424,1.258,425,1.258,426,1.5,427,3.163,467,1.937,471,1.937,481,1.937,487,1.258,521,2.564,523,2.564,527,2.564,531,2.564,533,2.564,534,2.309,535,2.309,536,3.126,538,1.665,539,1.665,541,3.126,543,2.564,544,1.5,545,1.665,546,1.5,547,1.665,565,2.884,568,2.564,569,1.887,570,1.937,585,1.887,586,2.223,587,2.223,588,2.223,589,2.223,590,2.223,591,2.223,592,2.223,593,2.223,594,2.223,595,2.223,596,2.223,597,2.223]],["title/classes/UpdateProductDto.html",[33,0.139,482,2.127]],["body/classes/UpdateProductDto.html",[3,0.312,4,0.312,5,0.272,13,0.023,23,0.531,27,1.341,32,0.312,33,0.198,40,0.02,41,0.02,189,1.518,224,1.831,226,3.317,240,3.317,251,2.782,332,3.025,482,3.642,598,4.172,599,3.683,600,4.915]],["title/classes/UpdateTableDto.html",[33,0.139,565,2.127]],["body/classes/UpdateTableDto.html",[3,0.3,4,0.3,5,0.261,13,0.023,23,0.517,27,1.287,32,0.3,33,0.19,40,0.02,41,0.02,189,1.457,224,1.757,281,2.67,283,3.534,332,2.903,388,3.183,389,3.183,544,3.183,546,3.183,565,3.552,568,3.534,599,4.324,601,4.004,602,4.717,603,4.717,604,4.717,605,4.717]],["title/classes/UpdateUserDto.html",[33,0.139,606,2.127]],["body/classes/UpdateUserDto.html",[3,0.312,4,0.312,5,0.272,13,0.023,23,0.531,27,1.341,32,0.312,33,0.198,40,0.02,41,0.02,189,1.518,224,1.831,286,2.782,288,3.683,332,3.025,599,3.683,606,3.642,607,4.172,608,3.683,609,4.915]],["title/classes/User.html",[33,0.139,101,1.209]],["body/classes/User.html",[3,0.245,4,0.245,5,0.213,9,0.495,13,0.023,19,1.059,22,1.537,32,0.245,33,0.155,40,0.017,41,0.017,95,1.549,96,1.059,97,1.756,101,1.775,171,2.972,172,3.493,177,2.972,189,1.19,192,1.667,202,1.864,364,3.83,366,3.83,367,4.519,610,3.27,611,3.852,612,3.852,613,3.852,614,3.852,615,3.852,616,3.852,617,3.852]],["title/controllers/UserController.html",[0,1.209,618,2.333]],["body/controllers/UserController.html",[0,0.837,2,0.837,3,0.152,4,0.152,5,0.132,7,1.356,9,0.308,10,1.19,12,1.83,13,0.024,19,0.845,21,1.719,22,1.362,23,0.493,24,0.475,25,3.115,26,1.356,27,0.654,32,0.152,33,0.096,34,0.951,35,0.892,37,2.961,38,1.719,40,0.012,41,0.012,94,1.703,95,1.329,96,0.786,97,1.329,101,0.837,105,2.74,108,2.23,111,2.23,112,1.474,113,1.474,114,0.892,115,3.22,132,2.998,184,1.982,199,1.897,202,1.808,224,1.349,286,3.115,379,2.37,380,1.763,382,3.531,383,2.445,384,3.65,385,2.714,388,2.445,389,2.445,392,1.165,395,1.616,398,1.165,407,2.033,408,1.616,409,1.616,467,2.05,471,1.356,472,2.714,475,3.65,476,2.714,481,1.356,483,2.714,486,1.794,487,1.356,496,1.794,499,1.794,500,1.794,512,1.794,578,2.033,606,3.622,608,2.714,618,2.445,619,2.033,620,2.395,621,2.395,622,2.395,623,2.395,624,2.395,625,2.395,626,2.395,627,2.395,628,2.395,629,2.395,630,2.395,631,2.473,632,2.033,633,2.395,634,2.395,635,2.395,636,2.395,637,2.395,638,2.395,639,2.395,640,2.395]],["title/modules/UserModule.html",[42,1.136,54,2.127]],["body/modules/UserModule.html",[2,1.805,3,0.251,4,0.251,5,0.219,13,0.024,23,0.567,24,0.785,32,0.251,33,0.159,40,0.017,41,0.017,42,1.696,44,1.677,45,2.189,51,2.749,54,4.121,55,2.512,56,1.924,57,1.924,59,2.703,60,2.922,114,1.473,141,2.433,144,2.433,146,2.433,147,2.433,148,1.924,618,3.879,631,3.669,632,3.356,641,3.356,642,3.954,643,3.356,644,3.954,645,3.954]],["title/injectables/UserService.html",[68,0.943,631,1.956]],["body/injectables/UserService.html",[3,0.11,4,0.11,5,0.096,9,0.223,10,0.923,13,0.024,19,0.85,21,1.577,22,1.319,23,0.453,24,0.344,32,0.11,33,0.07,34,0.688,35,0.645,38,1.473,40,0.01,41,0.01,68,0.767,69,0.786,94,1.678,95,1.437,96,0.816,97,1.31,98,2.563,99,3.301,101,0.982,104,0.907,156,2.765,157,0.98,158,0.98,159,1.619,162,1.471,166,1.169,167,0.98,168,2.105,169,3.008,170,2.347,171,1.471,172,3.35,173,2.537,174,1.298,175,2.655,176,3.936,177,1.471,178,2.181,179,2.006,184,1.85,192,0.923,199,0.907,202,1.788,205,2.105,214,0.98,224,1.046,260,1.298,279,2.384,286,2.308,289,3.461,290,2.384,291,2.105,293,2.384,338,2.384,341,1.169,364,1.896,366,1.896,379,1.984,380,1.367,392,1.367,398,0.843,424,0.98,425,0.98,426,1.169,427,2.752,467,1.59,471,1.59,481,1.59,487,0.98,521,2.105,523,2.105,527,2.105,531,2.105,533,2.105,534,1.896,535,1.896,536,2.655,538,1.298,539,1.298,541,2.655,543,2.105,544,1.169,545,1.298,546,1.169,547,1.298,606,2.509,608,2.105,631,1.59,646,1.47,647,3.544,648,1.732,649,1.732,650,1.732,651,1.732,652,1.732,653,1.732,654,1.732,655,1.732,656,1.47,657,1.47,658,1.732,659,3.544,660,1.732,661,1.732,662,3.544,663,2.809,664,2.809,665,2.809,666,2.809,667,1.732,668,1.732,669,1.732,670,1.732,671,1.732,672,1.732]],["title/coverage.html",[673,4.005]],["body/coverage.html",[0,1.998,1,1.787,5,0.146,6,2.248,13,0.024,28,1.499,33,0.265,40,0.013,41,0.013,68,1.655,70,2.248,81,1.787,82,2.248,87,1.63,96,0.428,101,0.926,117,1.499,119,1.787,123,1.787,138,1.63,155,2.248,159,1.052,179,1.499,188,1.63,190,2.926,191,2.248,195,1.787,225,2.21,240,3.131,251,1.499,252,2.248,281,1.499,282,2.248,283,2.926,286,1.499,287,2.248,288,2.926,320,2.248,346,2.248,353,2.248,354,2.248,363,2.248,365,2.045,370,1.387,377,1.787,378,2.248,396,1.499,400,1.984,416,2.248,424,1.499,425,1.499,445,2.248,457,2.248,465,1.787,466,2.248,482,1.63,489,1.499,520,2.248,549,2.248,552,1.787,553,2.248,565,1.63,570,1.499,585,2.248,598,2.248,601,2.248,606,1.63,607,2.248,610,2.248,618,1.787,619,2.248,631,1.499,646,2.248,673,2.248,674,2.648,675,2.648,676,2.648,677,7.024,678,4.639,679,6.064,680,2.248,681,2.648,682,5.713,683,2.248,684,3.905,685,2.248,686,3.905,687,2.648,688,3.905,689,5.12,690,5.12,691,2.648,692,2.248,693,2.648]],["title/dependencies.html",[45,1.763,694,2.449]],["body/dependencies.html",[13,0.024,24,0.822,27,1.13,33,0.214,40,0.018,41,0.018,45,1.756,79,3.102,114,1.542,143,3.102,148,2.015,168,3.102,220,3.515,223,2.168,331,4.987,423,2.794,695,5.876,696,4.141,697,5.319,698,4.141,699,4.141,700,4.141,701,4.141,702,5.319,703,4.141,704,4.141,705,4.141,706,4.141,707,4.141,708,4.141,709,4.141,710,4.141,711,4.141,712,4.141,713,4.141,714,4.141,715,4.141,716,4.141,717,4.141,718,4.141,719,4.141,720,4.141]],["title/miscellaneous/functions.html",[721,1.947,722,3.529]],["body/miscellaneous/functions.html",[9,0.635,13,0.022,40,0.02,41,0.02,94,1.727,95,1.348,96,0.797,97,1.348,424,3.359,425,2.795,534,4.293,535,3.333,683,4.192,685,5.4,692,5.037,721,3.333,722,4.192,723,4.939,724,4.939]],["title/index.html",[9,0.371,725,2.886,726,2.886]],["body/index.html",[8,4.175,13,0.023,40,0.019,41,0.019,79,3.339,80,3.783,162,2.334,227,1.77,501,4.175,727,4.457,728,4.457,729,4.457,730,4.457,731,4.457,732,5.572,733,4.457,734,4.457,735,4.457,736,4.457,737,4.457,738,6.37,739,4.457,740,4.457,741,6.08,742,4.457,743,4.457,744,5.572,745,4.457,746,4.457,747,4.457,748,4.457,749,4.457,750,4.457]],["title/modules.html",[44,2.001]],["body/modules.html",[13,0.019,40,0.019,41,0.019,43,3.141,44,1.974,49,2.864,50,2.864,51,1.974,52,2.864,53,2.864,54,2.864,751,6.849,752,6.849,753,6.849,754,6.849]],["title/overview.html",[755,4.005]],["body/overview.html",[2,1.104,13,0.024,28,2.899,40,0.015,41,0.015,43,4.625,44,1.339,45,1.88,46,2.68,47,2.68,48,2.68,49,3.977,50,3.833,51,2.807,52,3.833,53,3.833,54,3.833,55,2.157,56,1.537,57,1.537,69,1.433,117,2.899,135,2.68,137,2.68,138,3.152,159,2.474,189,0.975,396,2.899,411,2.68,412,2.68,439,2.68,440,2.68,441,2.68,489,2.899,515,2.68,517,2.68,570,2.899,580,2.68,582,2.68,631,2.899,641,2.68,643,2.68,755,2.68,756,3.158,757,3.158,758,3.158,759,3.158]],["title/properties.html",[192,1.366,694,2.449]],["body/properties.html",[13,0.023,40,0.021,41,0.021,192,1.719,227,2.079,760,5.234,761,5.234,762,5.234,763,5.234,764,5.234]],["title/miscellaneous/variables.html",[721,1.947,765,3.529]],["body/miscellaneous/variables.html",[9,0.615,13,0.024,38,1.571,40,0.02,41,0.02,101,2.035,123,3.927,170,3.047,183,3.582,184,2.169,400,3.582,656,4.058,657,4.058,680,4.94,721,3.227,765,4.058,766,4.781,767,4.781,768,4.781,769,4.781,770,4.781,771,4.781,772,4.781]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":677,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":761,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":714,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":707,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":708,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":682,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":678,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":679,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":687,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":228,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{}}}],["1.0.0",{"_index":711,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["1.jpg",{"_index":280,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["1.jpg'})@isurl",{"_index":264,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["10",{"_index":279,"title":{},"body":{"classes/CreateProductDto.html":{},"injectables/UserService.html":{}}}],["10})@isnumber",{"_index":270,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["14",{"_index":759,"title":{},"body":{"overview.html":{}}}],["1})@isint",{"_index":217,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["1})@isint()@ispositive",{"_index":246,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["1})@isnumber()@ispositive",{"_index":284,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["3.0.2",{"_index":716,"title":{},"body":{"dependencies.html":{}}}],["3.15.2",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":709,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["48h",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["49de",{"_index":233,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["5.0.1",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":757,"title":{},"body":{"overview.html":{}}}],["7",{"_index":756,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":758,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["_count",{"_index":436,"title":{},"body":{"injectables/OrderService.html":{}}}],["a80b",{"_index":234,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["ac2bd88a",{"_index":231,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["adicional",{"_index":241,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["apelido",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apenas",{"_index":507,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["api",{"_index":727,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":382,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":219,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":211,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('order",{"_index":401,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('product",{"_index":491,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('table",{"_index":572,"title":{},"body":{"controllers/TableController.html":{}}}],["apitags('user",{"_index":633,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["app",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":456,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":43,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":28,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["através",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["atualizar",{"_index":483,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["autenticado",{"_index":345,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["auth",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":81,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":49,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":764,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":117,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autorização",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["avatar",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["await",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":357,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["badrequestexception",{"_index":659,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(password",{"_index":666,"title":{},"body":{"injectables/UserService.html":{}}}],["body",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["bootstrap",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":754,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":751,"title":{},"body":{"modules.html":{}}}],["cadastrado",{"_index":347,"title":{},"body":{"classes/LoginDto.html":{}}}],["catch",{"_index":533,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["catch(handleerror",{"_index":434,"title":{},"body":{"injectables/OrderService.html":{}}}],["chamar",{"_index":508,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["check",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["class",{"_index":33,"title":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":189,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clone",{"_index":732,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":411,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":413,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":412,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":439,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":441,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":440,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":515,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":516,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":517,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_tablemodule",{"_index":580,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_tablemodule_imports",{"_index":581,"title":{},"body":{"modules/TableModule.html":{}}}],["cluster_tablemodule_providers",{"_index":582,"title":{},"body":{"modules/TableModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":641,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":642,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":643,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["com",{"_index":201,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["confirmação",{"_index":290,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["confirmpassword",{"_index":289,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["connect",{"_index":429,"title":{},"body":{"injectables/OrderService.html":{}}}],["const",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["content/uploads/2020/09/receita",{"_index":263,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('/app",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["controller('auth",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('order",{"_index":402,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('product",{"_index":492,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('table",{"_index":573,"title":{},"body":{"controllers/TableController.html":{}}}],["controller('user",{"_index":634,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["coverage",{"_index":673,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":224,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(@body",{"_index":496,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":403,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(createproductdto",{"_index":468,"title":{},"body":{"controllers/ProductController.html":{}}}],["create(createtabledto",{"_index":554,"title":{},"body":{"controllers/TableController.html":{}}}],["create(createuserdto",{"_index":620,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":523,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":381,"title":{},"body":{"controllers/OrderController.html":{}}}],["create(userid",{"_index":418,"title":{},"body":{"injectables/OrderService.html":{}}}],["createdat",{"_index":364,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createmany",{"_index":431,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":188,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createorderproductdto",{"_index":195,"title":{"classes/CreateOrderProductDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["createparamdecorator((_",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":251,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createtabledto",{"_index":281,"title":{"classes/CreateTableDto.html":{}},"body":{"classes/CreateTableDto.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":286,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["criar",{"_index":383,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["ctx",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["d1b3",{"_index":232,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["danilo",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["data",{"_index":427,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["date",{"_index":367,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["de",{"_index":199,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":656,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deletar",{"_index":472,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":499,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":500,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":471,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["denied",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["dependencies",{"_index":45,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":227,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"index.html":{},"properties.html":{}}}],["descrição",{"_index":206,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["deve",{"_index":292,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["development",{"_index":740,"title":{},"body":{"index.html":{}}}],["devem",{"_index":663,"title":{},"body":{"injectables/UserService.html":{}}}],["docs",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["documentation",{"_index":674,"title":{},"body":{"coverage.html":{}}}],["dto",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":665,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.products",{"_index":432,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto.tablenumber",{"_index":430,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto/create",{"_index":398,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/login.dto",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":487,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":205,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateProductDto.html":{},"injectables/UserService.html":{}}}],["e4539e0bed91",{"_index":235,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["each",{"_index":229,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["em",{"_index":546,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"injectables/UserService.html":{}}}],["enableshutdownhooks",{"_index":447,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":449,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":539,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["entities/product.entity",{"_index":488,"title":{},"body":{"controllers/ProductController.html":{}}}],["entities/table.entity",{"_index":569,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{}}}],["entities/user.entity",{"_index":660,"title":{},"body":{"injectables/UserService.html":{}}}],["erro",{"_index":671,"title":{},"body":{"injectables/UserService.html":{}}}],["error",{"_index":534,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["error.util",{"_index":426,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["error.util.ts",{"_index":692,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["específico",{"_index":407,"title":{},"body":{"controllers/OrderController.html":{},"controllers/UserController.html":{}}}],["específico'})@get(':id",{"_index":393,"title":{},"body":{"controllers/OrderController.html":{}}}],["específico'})@get(':id')@useguards(undefined)@apibearerauth",{"_index":627,"title":{},"body":{"controllers/UserController.html":{}}}],["est",{"_index":344,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["example",{"_index":207,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["executioncontext",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exigidos",{"_index":603,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["existe",{"_index":342,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":443,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":332,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":329,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":336,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":338,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["fez",{"_index":215,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["findall",{"_index":379,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":521,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":527,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":380,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":409,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":392,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["foi",{"_index":361,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["forbiddenexception",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('access",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["found",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["fraca",{"_index":311,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["frajola",{"_index":275,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["frajola'})@isstring()@minlength(5",{"_index":267,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["fro",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["function",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":722,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gerado",{"_index":355,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get('/hello",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["get('/hello')@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["get(':id",{"_index":408,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":725,"title":{"index.html":{}},"body":{}}],["git",{"_index":734,"title":{},"body":{"index.html":{}}}],["handleerror",{"_index":424,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":535,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:3333/api",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["httpcode",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":498,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["httpcode(httpstatus.ok",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://api",{"_index":748,"title":{},"body":{"index.html":{}}}],["https://avatars.githubusercontent.com/u/85803705?v=4",{"_index":319,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["https://avatars.githubusercontent.com/u/85803705?v=4'})@isurl",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["https://github.com/danmazda/api",{"_index":735,"title":{},"body":{"index.html":{}}}],["https://www.cozinhatecnica.com/wp",{"_index":262,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["httpstatus",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["id",{"_index":202,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":675,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":337,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["igual",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["image",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["imagem",{"_index":261,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["implements",{"_index":453,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":438,"title":{},"body":{"injectables/OrderService.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":450,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["informações",{"_index":476,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["ingredientes",{"_index":254,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["injectable",{"_index":68,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":737,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":739,"title":{},"body":{"index.html":{}}}],["isint",{"_index":221,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["isnotempty",{"_index":352,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":272,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{}}}],["ispositive",{"_index":248,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateTableDto.html":{}}}],["isstring",{"_index":249,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":350,"title":{},"body":{"classes/LoginDto.html":{}}}],["isurl",{"_index":273,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isuuid",{"_index":250,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":244,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["jwt",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":335,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":138,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["lactose",{"_index":239,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["lactose.'})@isstring",{"_index":242,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["license",{"_index":762,"title":{},"body":{"properties.html":{}}}],["link",{"_index":259,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["lista",{"_index":198,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["literal",{"_index":324,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":710,"title":{},"body":{"dependencies.html":{}}}],["logado",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["logado.'})@apibearerauth",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["logged",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(dto",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":87,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":119,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["made",{"_index":729,"title":{},"body":{"index.html":{}}}],["mas",{"_index":506,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["matches",{"_index":313,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":318,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mesa",{"_index":213,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"controllers/TableController.html":{}}}],["mesa'})@get",{"_index":561,"title":{},"body":{"controllers/TableController.html":{}}}],["mesa'})@get(':id",{"_index":563,"title":{},"body":{"controllers/TableController.html":{}}}],["mesa'})@httpcode(httpstatus.no_content)@delete(':id",{"_index":559,"title":{},"body":{"controllers/TableController.html":{}}}],["mesa'})@patch(':id",{"_index":566,"title":{},"body":{"controllers/TableController.html":{}}}],["mesa'})@post",{"_index":557,"title":{},"body":{"controllers/TableController.html":{}}}],["mesmas",{"_index":664,"title":{},"body":{"injectables/UserService.html":{}}}],["message",{"_index":309,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mestredosmagos",{"_index":314,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["mestredosmagos'})@isstring",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mestredosmagos'})@isstring()@isnotempty",{"_index":348,"title":{},"body":{"classes/LoginDto.html":{}}}],["metadata",{"_index":713,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":274,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(19",{"_index":278,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["minlength(5",{"_index":276,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["minlength(8",{"_index":317,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":721,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":744,"title":{},"body":{"index.html":{}}}],["module",{"_index":42,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":44,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["mostra",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["muito",{"_index":310,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["muçarela",{"_index":277,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["muçarela.'})@isstring()@minlength(19",{"_index":257,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["n",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["name",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["necessário",{"_index":669,"title":{},"body":{"injectables/UserService.html":{}}}],["nest",{"_index":501,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"index.html":{}}}],["nestjs",{"_index":730,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["nickname",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["nome",{"_index":266,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["notfoundexception",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('user",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["notfoundexception(`${id",{"_index":538,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["nova",{"_index":556,"title":{},"body":{"controllers/TableController.html":{}}}],["novo",{"_index":385,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["npm",{"_index":738,"title":{},"body":{"index.html":{}}}],["number",{"_index":210,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"classes/Table.html":{}}}],["não",{"_index":341,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["número",{"_index":212,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{}}}],["o",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateTableDto.html":{},"classes/LoginResponseDto.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["object",{"_index":655,"title":{},"body":{"injectables/UserService.html":{}}}],["objetos",{"_index":200,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["onmoduleinit",{"_index":448,"title":{},"body":{"injectables/PrismaService.html":{}}}],["opicionais",{"_index":604,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["opicional",{"_index":547,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["optional",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":225,"title":{"classes/Order.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["order.controller",{"_index":415,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":399,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":191,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:12",{"_index":218,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:26",{"_index":209,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.service",{"_index":397,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["ordercontroller",{"_index":377,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["ordermodule",{"_index":50,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderservice",{"_index":396,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["os",{"_index":389,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"classes/UpdateTableDto.html":{},"controllers/UserController.html":{}}}],["ou",{"_index":343,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["out",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":755,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":694,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":260,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/LoginResponseDto.html":{},"injectables/UserService.html":{}}}],["param",{"_index":395,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":513,"title":{},"body":{"controllers/ProductController.html":{}}}],["parameters",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":543,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":599,"title":{},"body":{"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createproductdto",{"_index":600,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createtabledto",{"_index":605,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["partialtype(createuserdto",{"_index":609,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":331,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":328,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":333,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":486,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":512,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["payload",{"_index":326,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.nickname",{"_index":340,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pedido",{"_index":216,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/OrderController.html":{}}}],["pedido.'})@post",{"_index":386,"title":{},"body":{"controllers/OrderController.html":{}}}],["pedidos",{"_index":405,"title":{},"body":{"controllers/OrderController.html":{}}}],["pedidos'})@get",{"_index":390,"title":{},"body":{"controllers/OrderController.html":{}}}],["pegar",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["pelo",{"_index":356,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["please",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["post",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["presunto",{"_index":256,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["preço",{"_index":268,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["price",{"_index":253,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["prisma",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["prisma.ordercreateinput",{"_index":428,"title":{},"body":{"injectables/OrderService.html":{}}}],["prisma.service",{"_index":444,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/client",{"_index":423,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":446,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":51,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":159,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["procópio",{"_index":315,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["procópio'})@isstring",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["product",{"_index":370,"title":{"classes/Product.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["product.controller",{"_index":519,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":226,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":240,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:10",{"_index":245,"title":{},"body":{"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["product.dto.ts:17",{"_index":258,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:18",{"_index":247,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:23",{"_index":271,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:25",{"_index":243,"title":{},"body":{"classes/CreateOrderProductDto.html":{}}}],["product.dto.ts:30",{"_index":265,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":490,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["productcontroller",{"_index":465,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":230,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["production",{"_index":746,"title":{},"body":{"index.html":{}}}],["production.up.railway.app/api",{"_index":750,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":52,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":193,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{}}}],["productservice",{"_index":489,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":203,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produto'})@get(':id",{"_index":479,"title":{},"body":{"controllers/ProductController.html":{}}}],["produto'})@httpcode(httpstatus.no_content)@delete(':id",{"_index":473,"title":{},"body":{"controllers/ProductController.html":{}}}],["produto'})@patch(':id",{"_index":484,"title":{},"body":{"controllers/ProductController.html":{}}}],["produto'})@post",{"_index":469,"title":{},"body":{"controllers/ProductController.html":{}}}],["produtos",{"_index":493,"title":{},"body":{"controllers/ProductController.html":{}}}],["produtos'})@get",{"_index":477,"title":{},"body":{"controllers/ProductController.html":{}}}],["profile",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["promise",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["promises",{"_index":504,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["properties",{"_index":192,"title":{"properties.html":{}},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Table.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["qual",{"_index":360,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["quantidade",{"_index":204,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["quantity",{"_index":236,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"injectables/OrderService.html":{}}}],["que",{"_index":214,"title":{},"body":{"classes/CreateOrderDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["queijo",{"_index":237,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{}}}],["readonly",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["record",{"_index":536,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":712,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":733,"title":{},"body":{"index.html":{}}}],["request",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request.user",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requirido",{"_index":545,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["reset",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response.dto",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["response.dto.ts",{"_index":354,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":362,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":359,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["restaurant",{"_index":728,"title":{},"body":{"index.html":{}}}],["results",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retornadas",{"_index":505,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["return",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["rimraf",{"_index":715,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":741,"title":{},"body":{"index.html":{}}}],["running",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["se",{"_index":502,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["secret",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":339,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["select",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["sem",{"_index":238,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{}}}],["senha",{"_index":291,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"injectables/UserService.html":{}}}],["ser",{"_index":293,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["server",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["signoptions",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateTableDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/.../handle",{"_index":724,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":723,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:26",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":353,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":346,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":349,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":351,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":325,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":400,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":683,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/order/dto/create",{"_index":190,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts",{"_index":363,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/order/entities/order.entity.ts:10",{"_index":368,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:11",{"_index":373,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:6",{"_index":369,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:7",{"_index":374,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:8",{"_index":372,"title":{},"body":{"classes/Order.html":{}}}],["src/order/entities/order.entity.ts:9",{"_index":371,"title":{},"body":{"classes/Order.html":{}}}],["src/order/order.controller.ts",{"_index":378,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:17",{"_index":387,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:23",{"_index":391,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:29",{"_index":394,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":414,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":416,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:10",{"_index":419,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:50",{"_index":421,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:73",{"_index":422,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:8",{"_index":417,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/prisma/prisma.module",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":442,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":445,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":451,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":452,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/product/dto/create",{"_index":252,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":598,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":375,"title":{},"body":{"classes/Order.html":{}}}],["src/product/entities/product.entity.ts",{"_index":457,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:2",{"_index":460,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:3",{"_index":462,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:4",{"_index":459,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:5",{"_index":463,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":461,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":458,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":464,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":466,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:31",{"_index":478,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:40",{"_index":480,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:49",{"_index":470,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:59",{"_index":474,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:69",{"_index":485,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":518,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":520,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:12",{"_index":524,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:21",{"_index":528,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:28",{"_index":526,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:31",{"_index":529,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:34",{"_index":525,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:38",{"_index":530,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:9",{"_index":522,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/table/dto/create",{"_index":282,"title":{},"body":{"classes/CreateTableDto.html":{},"coverage.html":{}}}],["src/table/dto/update",{"_index":601,"title":{},"body":{"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["src/table/entities/table.entity",{"_index":376,"title":{},"body":{"classes/Order.html":{}}}],["src/table/entities/table.entity.ts",{"_index":549,"title":{},"body":{"classes/Table.html":{},"coverage.html":{}}}],["src/table/entities/table.entity.ts:2",{"_index":550,"title":{},"body":{"classes/Table.html":{}}}],["src/table/entities/table.entity.ts:3",{"_index":551,"title":{},"body":{"classes/Table.html":{}}}],["src/table/table.controller.ts",{"_index":553,"title":{},"body":{"controllers/TableController.html":{},"coverage.html":{}}}],["src/table/table.controller.ts:31",{"_index":562,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:40",{"_index":564,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:49",{"_index":558,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:59",{"_index":560,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.controller.ts:69",{"_index":567,"title":{},"body":{"controllers/TableController.html":{}}}],["src/table/table.module.ts",{"_index":583,"title":{},"body":{"modules/TableModule.html":{}}}],["src/table/table.service.ts",{"_index":585,"title":{},"body":{"injectables/TableService.html":{},"coverage.html":{}}}],["src/table/table.service.ts:12",{"_index":590,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:19",{"_index":589,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:22",{"_index":591,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:25",{"_index":587,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:33",{"_index":588,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:37",{"_index":592,"title":{},"body":{"injectables/TableService.html":{}}}],["src/table/table.service.ts:9",{"_index":586,"title":{},"body":{"injectables/TableService.html":{}}}],["src/user/dto/create",{"_index":287,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":607,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":610,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:2",{"_index":612,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:3",{"_index":615,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:4",{"_index":614,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":616,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":613,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":611,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":617,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":619,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:26",{"_index":622,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:36",{"_index":626,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:46",{"_index":628,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:56",{"_index":630,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:66",{"_index":624,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":644,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":646,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:15",{"_index":658,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:23",{"_index":648,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:26",{"_index":652,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:33",{"_index":651,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:36",{"_index":653,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:39",{"_index":649,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:54",{"_index":650,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:58",{"_index":654,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle",{"_index":425,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":742,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":745,"title":{},"body":{"index.html":{}}}],["start:prodapi",{"_index":747,"title":{},"body":{"index.html":{}}}],["started",{"_index":726,"title":{"index.html":{}},"body":{}}],["statements",{"_index":676,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["strategy",{"_index":330,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["summary",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":334,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["supersafepassword123",{"_index":316,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["supersafepassword123@'})@isstring",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["supersafepassword123@'})@minlength(8)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":306,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["support",{"_index":752,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":753,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":79,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{},"index.html":{}}}],["table",{"_index":365,"title":{"classes/Table.html":{}},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"coverage.html":{}}}],["table.controller",{"_index":584,"title":{},"body":{"modules/TableModule.html":{}}}],["table.dto",{"_index":568,"title":{},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{}}}],["table.dto.ts",{"_index":283,"title":{},"body":{"classes/CreateTableDto.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["table.dto.ts:10",{"_index":285,"title":{},"body":{"classes/CreateTableDto.html":{}}}],["table.service",{"_index":571,"title":{},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{}}}],["table/table.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["tablecontroller",{"_index":552,"title":{"controllers/TableController.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"coverage.html":{}}}],["tablemodule",{"_index":53,"title":{"modules/TableModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TableModule.html":{},"modules.html":{},"overview.html":{}}}],["tablenumber",{"_index":194,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["tableservice",{"_index":570,"title":{"injectables/TableService.html":{}},"body":{"controllers/TableController.html":{},"modules/TableModule.html":{},"injectables/TableService.html":{},"coverage.html":{},"overview.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["tapioca",{"_index":255,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["tapiocaria",{"_index":749,"title":{},"body":{"index.html":{}}}],["tapiocaria.git",{"_index":736,"title":{},"body":{"index.html":{}}}],["tem",{"_index":509,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["this.$connect",{"_index":454,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":455,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(dto",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":541,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["this.jwtservice.sign",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.orderservice.create(user.id",{"_index":404,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":406,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findone(id",{"_index":410,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.prisma.order",{"_index":433,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findmany",{"_index":435,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.order.findunique",{"_index":437,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.prisma.product.create",{"_index":532,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":542,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany",{"_index":540,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":537,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.update",{"_index":548,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.table.create",{"_index":595,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.delete",{"_index":596,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findmany",{"_index":594,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.findunique",{"_index":593,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.table.update",{"_index":597,"title":{},"body":{"injectables/TableService.html":{}}}],["this.prisma.user.create",{"_index":667,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":668,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":661,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":672,"title":{},"body":{"injectables/UserService.html":{}}}],["this.productservice.create(createproductdto",{"_index":497,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id",{"_index":511,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":494,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":495,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":514,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.tableservice.create(createtabledto",{"_index":576,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.delete(id",{"_index":577,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findall",{"_index":574,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.findone(id",{"_index":575,"title":{},"body":{"controllers/TableController.html":{}}}],["this.tableservice.update(id",{"_index":579,"title":{},"body":{"controllers/TableController.html":{}}}],["this.userselect",{"_index":662,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":635,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(id",{"_index":640,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":637,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":638,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":639,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["tipos",{"_index":602,"title":{},"body":{"classes/UpdateTableDto.html":{}}}],["todos",{"_index":388,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"classes/UpdateTableDto.html":{},"controllers/UserController.html":{}}}],["token",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token.'})@httpcode(httpstatus.ok",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["token_gerado_automaticamente",{"_index":358,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["torna",{"_index":544,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"injectables/UserService.html":{}}}],["total",{"_index":269,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["transformer",{"_index":220,"title":{},"body":{"classes/CreateOrderDto.html":{},"dependencies.html":{}}}],["tratamento",{"_index":670,"title":{},"body":{"injectables/UserService.html":{}}}],["true",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"injectables/OrderService.html":{},"injectables/UserService.html":{}}}],["true})@type(undefined)@apiproperty({description",{"_index":197,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["try",{"_index":531,"title":{},"body":{"injectables/ProductService.html":{},"injectables/TableService.html":{},"injectables/UserService.html":{}}}],["type",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Table.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["types",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":731,"title":{},"body":{"index.html":{}}}],["ui",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":384,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":555,"title":{},"body":{"controllers/TableController.html":{}}}],["unauthorizedexception",{"_index":327,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":208,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["unknown",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/OrderService.html":{},"injectables/TableService.html":{}}}],["unlicensed",{"_index":763,"title":{},"body":{"properties.html":{}}}],["update",{"_index":467,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["update(@param('id",{"_index":578,"title":{},"body":{"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":481,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TableController.html":{},"injectables/TableService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":366,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":482,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updatetabledto",{"_index":565,"title":{"classes/UpdateTableDto.html":{}},"body":{"controllers/TableController.html":{},"injectables/TableService.html":{},"classes/UpdateTableDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":606,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usar",{"_index":510,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["useguards",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":101,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":645,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"controllers/OrderController.html":{}}}],["user.decorator.ts",{"_index":680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":608,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":288,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:24",{"_index":312,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":305,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.password",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":632,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["usercontroller",{"_index":618,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":420,"title":{},"body":{"injectables/OrderService.html":{}}}],["usermodule",{"_index":54,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["userselect",{"_index":647,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":631,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usuário",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["usuário'})@patch(':id')@useguards(undefined)@apibearerauth",{"_index":629,"title":{},"body":{"controllers/UserController.html":{}}}],["usuário'})@post",{"_index":621,"title":{},"body":{"controllers/UserController.html":{}}}],["usuário.'})@delete(':id')@useguards(undefined)@apibearerauth",{"_index":623,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários",{"_index":636,"title":{},"body":{"controllers/UserController.html":{}}}],["usuários'})@get()@useguards(undefined)@apibearerauth",{"_index":625,"title":{},"body":{"controllers/UserController.html":{}}}],["validate",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":323,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatenested",{"_index":222,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validatenested({each",{"_index":196,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["validator",{"_index":223,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/CreateOrderProductDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTableDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":657,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":681,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":765,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ver",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/OrderController.html":{}}}],["version",{"_index":760,"title":{},"body":{"properties.html":{}}}],["vira",{"_index":503,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{}}}],["visualizar",{"_index":475,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TableController.html":{},"controllers/UserController.html":{}}}],["watch",{"_index":743,"title":{},"body":{"index.html":{}}}],["z",{"_index":308,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":307,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/OrderModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/TableModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /app\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/hello')@ApiOperation({summary: 'Ver status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@ApiTags('status')\n@Controller('/app')\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('/hello')\n  @ApiOperation({ summary: 'Ver status da aplicação' })\n  getAppStatus(): string {\n    return this.appService.getAppStatus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            TableModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TableModule } from './table/table.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UserModule } from './user/user.module';\nimport { ProductModule } from './product/product.module';\nimport { OrderModule } from './order/order.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [TableModule, PrismaModule, UserModule, ProductModule, OrderModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(): string {\n    return 'Server is running 😎 \\n Please check: http://localhost:3333/api fro Swagger Docs';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(dto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Pegar autorização através do token.'})@HttpCode(HttpStatus.OK)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Mostra o usuário logado.'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @ApiOperation({ summary: 'Pegar autorização através do token.' })\n  @HttpCode(HttpStatus.OK)\n  login(@Body() dto: LoginDto): Promise {\n    return this.authService.login(dto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({ summary: 'Mostra o usuário logado.' })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '48h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtservice: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtservice\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(dto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ForbiddenException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtservice: JwtService,\n  ) {}\n  async login(dto: LoginDto) {\n    const { nickname, password } = dto;\n    const user = await this.prisma.user.findUnique({\n      where: { nickname },\n      select: {\n        nickname: true,\n        name: true,\n        image: true,\n        password: true,\n      },\n    });\n    if (!user) throw new NotFoundException('User not found!');\n    if (await bcrypt.compare(password, user.password)) {\n      delete user.password;\n      return { token: this.jwtservice.sign({ nickname }), user };\n    } else {\n      throw new ForbiddenException('Access Denied!');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                            \n                                tableNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderProductDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@ApiProperty({description: 'Lista de objetos com ID do produto, quantidade e descrição', example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tableNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Número da mesa do usuário que fez o pedido.', example: 1})@IsInt()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport { IsInt, ValidateNested } from 'class-validator';\nimport { CreateOrderProductDto } from './create-order-product.dto';\n\nexport class CreateOrderDto {\n  @ApiProperty({\n    description: 'Número da mesa do usuário que fez o pedido.',\n    example: 1,\n  })\n  @IsInt()\n  tableNumber: number;\n\n  @ValidateNested({ each: true })\n  @Type(() => CreateOrderProductDto)\n  @ApiProperty({\n    description: 'Lista de objetos com ID do produto, quantidade e descrição',\n    example: [\n      {\n        productId: 'ac2bd88a-d1b3-49de-a80b-e4539e0bed91',\n        quantity: 1,\n        description: 'Queijo sem lactose',\n      },\n    ],\n  })\n  products: CreateOrderProductDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderProductDto.html":{"url":"classes/CreateOrderProductDto.html","title":"class - CreateOrderProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/create-order-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                productId\n                            \n                            \n                                quantity\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Descrição adicional.', example: 'Queijo sem lactose.'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'Id do produto.', example: 'ac2bd88a-d1b3-49de-a80b-e4539e0bed91'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Quantidade do produto', example: 1})@IsInt()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/create-order-product.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsPositive, IsString, IsUUID } from 'class-validator';\n\nexport class CreateOrderProductDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'Id do produto.',\n    example: 'ac2bd88a-d1b3-49de-a80b-e4539e0bed91',\n  })\n  productId: string;\n\n  @ApiProperty({\n    description: 'Quantidade do produto',\n    example: 1,\n  })\n  @IsInt()\n  @IsPositive()\n  quantity: number;\n\n  @ApiProperty({\n    description: 'Descrição adicional.',\n    example: 'Queijo sem lactose.',\n  })\n  @IsString()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Descrição do produto, com ingredientes.', example: 'Tapioca de presunto e queijo muçarela.'})@IsString()@MinLength(19)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Link para a imagem do produto.', example: 'https://www.cozinhatecnica.com/wp-content/uploads/2020/09/receita-de-tapioca-1.jpg'})@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nome do produto', example: 'Frajola'})@IsString()@MinLength(5)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Preço total do produto.', example: 10})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString, IsUrl, MinLength } from 'class-validator';\nexport class CreateProductDto {\n  @ApiProperty({\n    description: 'Nome do produto',\n    example: 'Frajola',\n  })\n  @IsString()\n  @MinLength(5)\n  name: string;\n  @ApiProperty({\n    description: 'Descrição do produto, com ingredientes.',\n    example: 'Tapioca de presunto e queijo muçarela.',\n  })\n  @IsString()\n  @MinLength(19)\n  description: string;\n  @ApiProperty({\n    description: 'Preço total do produto.',\n    example: 10,\n  })\n  @IsNumber()\n  price: number;\n  @ApiProperty({\n    description: 'Link para a imagem do produto.',\n    example:\n      'https://www.cozinhatecnica.com/wp-content/uploads/2020/09/receita-de-tapioca-1.jpg',\n  })\n  @IsUrl()\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTableDto.html":{"url":"classes/CreateTableDto.html","title":"class - CreateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/create-table.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'O número da mesa.', example: 1})@IsNumber()@IsPositive()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/table/dto/create-table.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsPositive } from 'class-validator';\nexport class CreateTableDto {\n  @ApiProperty({\n    description: 'O número da mesa.',\n    example: 1,\n  })\n  @IsNumber()\n  @IsPositive()\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Confirmação de senha, deve ser igual a senha', example: 'SuperSafePassword123@'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Avatar do usuário', example: 'https://avatars.githubusercontent.com/u/85803705?v=4'})@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nome do usuário ', example: 'Danilo Procópio'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Apelido do usuário', example: 'MestreDosMagos'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Senha do usuário', example: 'SuperSafePassword123@'})@MinLength(8)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/create-user.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString, IsUrl, Matches, MinLength } from 'class-validator';\nexport class CreateUserDto {\n  @ApiProperty({\n    description: 'Apelido do usuário',\n    example: 'MestreDosMagos',\n  })\n  @IsString()\n  nickname: string;\n  @ApiProperty({\n    description: 'Nome do usuário ',\n    example: 'Danilo Procópio',\n  })\n  @IsString()\n  name: string;\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'SuperSafePassword123@',\n  })\n  @MinLength(8)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca!',\n  })\n  password: string;\n  @ApiProperty({\n    description: 'Confirmação de senha, deve ser igual a senha',\n    example: 'SuperSafePassword123@',\n  })\n  @IsString()\n  confirmPassword: string;\n  @ApiProperty({\n    description: 'Avatar do usuário',\n    example: 'https://avatars.githubusercontent.com/u/85803705?v=4',\n  })\n  @IsUrl()\n  image: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { nickname: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { nickname: payload.nickname },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Usuário não existe ou não está autenticado',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nickname cadastrado do usuário', example: 'MestreDosMagos'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'SuperSafePassword123@'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @ApiProperty({\n    description: 'Nickname cadastrado do usuário',\n    example: 'MestreDosMagos',\n  })\n  @IsString()\n  @IsNotEmpty()\n  nickname: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'SuperSafePassword123@',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Token gerado pelo backend.', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Usuário para o qual o jwt foi gerado.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'Token gerado pelo backend.',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Usuário para o qual o jwt foi gerado.',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                    Optional\n                                table\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Table\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/order/entities/order.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from 'src/product/entities/product.entity';\nimport { Table } from 'src/table/entities/table.entity';\nimport { User } from 'src/user/entities/user.entity';\n\nexport class Order {\n  id?: string;\n  user?: User;\n  table?: Table;\n  products?: Product[];\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Criar um novo pedido.'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Ver todos os pedidos'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Ver pedido específico'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/order/order.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, UseGuards } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/user/entities/user.entity';\n\n@ApiTags('order')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n  @ApiOperation({ summary: 'Criar um novo pedido.' })\n  @Post()\n  create(@LoggedUser() user: User, @Body() createOrderDto: CreateOrderDto) {\n    return this.orderService.create(user.id, createOrderDto);\n  }\n\n  @ApiOperation({ summary: 'Ver todos os pedidos' })\n  @Get()\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @ApiOperation({ summary: 'Ver pedido específico' })\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [OrderController],\n  providers: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(userId: string, dto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/order/order.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Injectable()\nexport class OrderService {\n  constructor(private readonly prisma: PrismaService) {}\n  async create(userId: string, dto: CreateOrderDto) {\n    const data: Prisma.OrderCreateInput = {\n      user: { connect: { id: userId } },\n      table: { connect: { number: dto.tableNumber } },\n      products: {\n        createMany: {\n          data: dto.products,\n        },\n      },\n    };\n\n    return await this.prisma.order\n      .create({\n        data,\n        select: {\n          id: true,\n          user: {\n            select: {\n              nickname: true,\n            },\n          },\n          table: {\n            select: {\n              number: true,\n            },\n          },\n          products: {\n            select: {\n              product: {\n                select: {\n                  name: true,\n                },\n              },\n            },\n          },\n        },\n      })\n      .catch(handleError);\n  }\n\n  findAll() {\n    return this.prisma.order.findMany({\n      select: {\n        id: true,\n        user: {\n          select: {\n            nickname: true,\n          },\n        },\n        table: {\n          select: {\n            number: true,\n          },\n        },\n        _count: {\n          select: {\n            products: true,\n          },\n        },\n      },\n    });\n  }\n\n  findOne(id: string) {\n    return this.prisma.order.findUnique({\n      where: { id },\n      include: {\n        user: {\n          select: {\n            id: true,\n            nickname: true,\n            name: true,\n            image: true,\n          },\n        },\n        table: {\n          select: {\n            id: true,\n            number: true,\n          },\n        },\n        products: {\n          select: {\n            product: { select: { id: true, name: true } },\n            quantity: true,\n            description: true,\n          },\n        },\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                price\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Product {\n  id?: string;\n  name: string;\n  description: string;\n  price: number;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Criar um novo produto'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Deletar um produto'})@HttpCode(HttpStatus.NO_CONTENT)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Visualizar informações de todos os produtos'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Visualizar informações de um produto'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Atualizar um produto'})@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\nimport { ProductService } from './product.service';\n\n@ApiTags('product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n  //all\n  @ApiOperation({\n    summary: 'Visualizar informações de todos os produtos',\n  })\n  @Get()\n  findAll(): Promise {\n    return this.productService.findAll();\n  }\n\n  //id\n  @ApiOperation({\n    summary: 'Visualizar informações de um produto',\n  })\n  @Get(':id')\n  findOne(@Param('id') id: string): Promise {\n    return this.productService.findOne(id);\n  }\n\n  //create\n  @ApiOperation({\n    summary: 'Criar um novo produto',\n  })\n  @Post()\n  create(@Body() createProductDto: CreateProductDto): Promise {\n    return this.productService.create(createProductDto);\n  }\n\n  //delete\n  @ApiOperation({\n    summary: 'Deletar um produto',\n  })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':id')\n  async delete(@Param('id') id: string): Promise {\n    //Nest se vira com promises retornadas, mas se for apenas chamar a promise tem que usar await\n    await this.productService.delete(id);\n  }\n\n  //update\n  @ApiOperation({\n    summary: 'Atualizar um produto',\n  })\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() dto: UpdateProductDto,\n  ): Promise {\n    return this.productService.update(id, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Product } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  create(dto: CreateProductDto) {\n    const data = { ...dto };\n    try {\n      return this.prisma.product.create({ data });\n    } catch (error) {\n      handleError(error);\n    }\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.product.findUnique({ where: { id } });\n    if (!record) {\n      throw new NotFoundException(`${id} não encontrado!`);\n    }\n    return record;\n  }\n  findAll(): Promise {\n    return this.prisma.product.findMany();\n  }\n  async findOne(id: string): Promise {\n    return await this.findById(id);\n  }\n  async delete(id: string): Promise {\n    await this.findById(id);\n    await this.prisma.product.delete({ where: { id } });\n  }\n  async update(id: string, dto: UpdateProductDto): Promise {\n    //Partial torna o que é requirido em opicional\n    await this.findById(id);\n    const data: Partial = { ...dto };\n    try {\n      return this.prisma.product.update({ where: { id }, data });\n    } catch (error) {\n      handleError(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Table.html":{"url":"classes/Table.html","title":"class - Table","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Table\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/entities/table.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/table/entities/table.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Table {\n  id?: string;\n  number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TableController.html":{"url":"controllers/TableController.html","title":"controller - TableController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TableController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                table\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createTableDto: CreateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Criar uma nova mesa'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTableDto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Deletar uma mesa'})@HttpCode(HttpStatus.NO_CONTENT)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Visualizar informações de uma mesa'})@Get()\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Visualizar informações de uma mesa'})@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateTableDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Atualizar uma mesa'})@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/table/table.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\nimport { TableService } from './table.service';\n\n@ApiTags('table')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('table')\nexport class TableController {\n  constructor(private readonly tableService: TableService) {}\n  //all\n  @ApiOperation({\n    summary: 'Visualizar informações de uma mesa',\n  })\n  @Get()\n  findAll(): Promise {\n    return this.tableService.findAll();\n  }\n\n  //id\n  @ApiOperation({\n    summary: 'Visualizar informações de uma mesa',\n  })\n  @Get(':id')\n  findOne(@Param('id') id: string): Promise {\n    return this.tableService.findOne(id);\n  }\n\n  //create\n  @ApiOperation({\n    summary: 'Criar uma nova mesa',\n  })\n  @Post()\n  create(@Body() createTableDto: CreateTableDto): Promise {\n    return this.tableService.create(createTableDto);\n  }\n\n  //delete\n  @ApiOperation({\n    summary: 'Deletar uma mesa',\n  })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':id')\n  async delete(@Param('id') id: string): Promise {\n    //Nest se vira com promises retornadas, mas se for apenas chamar a promise tem que usar await\n    await this.tableService.delete(id);\n  }\n\n  //update\n  @ApiOperation({\n    summary: 'Atualizar uma mesa',\n  })\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() dto: UpdateTableDto): Promise {\n    return this.tableService.update(id, dto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TableModule.html":{"url":"modules/TableModule.html","title":"module - TableModule","body":"\n                   \n\n\n\n\n    Modules\n    TableModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TableModule\n\n\n\ncluster_TableModule_imports\n\n\n\ncluster_TableModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/table/table.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TableService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TableController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { TableController } from './table.controller';\nimport { TableService } from './table.service';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [TableController],\n  providers: [TableService],\n})\nexport class TableModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableService.html":{"url":"injectables/TableService.html","title":"injectable - TableService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TableService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/table.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/table/table.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateTableDto)\n                \n            \n\n\n            \n                \n                    Defined in src/table/table.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateTableDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { handleError } from 'src/utils/handle-error.util';\nimport { CreateTableDto } from './dto/create-table.dto';\nimport { UpdateTableDto } from './dto/update-table.dto';\nimport { Table } from './entities/table.entity';\n\n@Injectable()\nexport class TableService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async findById(id: string) {\n    const record = await this.prisma.table.findUnique({ where: { id } });\n    if (!record) {\n      throw new NotFoundException(`${id} não encontrado!`);\n    }\n    return record;\n  }\n  findAll(): Promise {\n    return this.prisma.table.findMany();\n  }\n  async findOne(id: string): Promise {\n    return await this.findById(id);\n  }\n  create(dto: CreateTableDto): Promise {\n    const data: Table = { ...dto };\n    try {\n      return this.prisma.table.create({ data });\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  async delete(id: string): Promise {\n    await this.findById(id);\n    await this.prisma.table.delete({ where: { id } });\n  }\n  async update(id: string, dto: UpdateTableDto): Promise {\n    //Partial torna o que é requirido em opicional\n    await this.findById(id);\n    const data: Partial = { ...dto };\n    try {\n      return this.prisma.table.update({ where: { id }, data });\n    } catch (error) {\n      handleError(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTableDto.html":{"url":"classes/UpdateTableDto.html","title":"class - UpdateTableDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTableDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/table/dto/update-table.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTableDto } from './create-table.dto';\n\n// PartialType torna todos os tipos exigidos em opicionais\nexport class UpdateTableDto extends PartialType(CreateTableDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                image\n                            \n                            \n                                name\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  nickname: string;\n  name: string;\n  password: string;\n  image: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Criar um novo usuário'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Deletar usuário.'})@Delete(':id')@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Visualizar todos os usuários'})@Get()@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Visualizar informações de um usuário específico'})@Get(':id')@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Atualizar usuário'})@Patch(':id')@UseGuards(undefined)@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/user/user.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @ApiOperation({\n    summary: 'Criar um novo usuário',\n  })\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @ApiOperation({\n    summary: 'Visualizar todos os usuários',\n  })\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @ApiOperation({\n    summary: 'Visualizar informações de um usuário específico',\n  })\n  @Get(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @ApiOperation({\n    summary: 'Atualizar usuário',\n  })\n  @Patch(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(id, updateUserDto);\n  }\n\n  @ApiOperation({\n    summary: 'Deletar usuário.',\n  })\n  @Delete(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  delete(@Param('id') id: string) {\n    return this.userService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UserController],\n  providers: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/user/user.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/user/user.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { handleError } from 'src/utils/handle-error.util';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    nickname: true,\n    name: true,\n    password: false,\n    image: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n  constructor(private readonly prisma: PrismaService) {}\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.user.findUnique({ where: { id } });\n    if (!record) {\n      throw new NotFoundException(`${id} não encontrado!`);\n    }\n    return record;\n  }\n  findAll(): Promise {\n    return this.prisma.user.findMany({ select: this.userSelect });\n  }\n  async findOne(id: string): Promise {\n    return await this.findById(id);\n  }\n  async create(dto: CreateUserDto): Promise {\n    const { password, confirmPassword } = dto;\n    if (password !== confirmPassword) {\n      throw new BadRequestException(\n        'A senha e a confirmação devem ser as mesmas.',\n      );\n    }\n    delete dto.confirmPassword;\n    const data: User = { ...dto, password: await bcrypt.hash(password, 10) };\n    try {\n      return await this.prisma.user.create({ data, select: this.userSelect });\n    } catch (error) {\n      handleError(error);\n    }\n  }\n  async delete(id: string): Promise {\n    await this.findById(id);\n    await this.prisma.user.delete({ where: { id } });\n  }\n  async update(id: string, dto: UpdateUserDto): Promise {\n    const { password, confirmPassword } = dto;\n    if (password) {\n      if (password !== confirmPassword) {\n        throw new BadRequestException(\n          'A senha e a confirmação devem ser as mesmas.',\n        );\n      }\n      delete dto.confirmPassword;\n    }\n    //Partial torna o que é requirido em opicional\n    await this.findById(id);\n    const data: Partial = {\n      ...dto,\n      password: await bcrypt.hash(password, 10),\n    };\n    try {\n      // await é necessário para tratamento de erro\n      return await this.prisma.user.update({\n        where: { id },\n        data,\n        select: this.userSelect,\n      });\n    } catch (error) {\n      handleError(error);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/create-order-product.dto.ts\n            \n            class\n            CreateOrderProductDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/table/dto/create-table.dto.ts\n            \n            class\n            CreateTableDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/table/dto/update-table.dto.ts\n            \n            class\n            UpdateTableDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/table/entities/table.entity.ts\n            \n            class\n            Table\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/table/table.controller.ts\n            \n            controller\n            TableController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/table/table.service.ts\n            \n            injectable\n            TableService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/handle-error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.15.2\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle-error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle-error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nAPI for a restaurant app. Made with: NestJs, Typescript, Prisma and Swagger.\nClone Repository\ngit clone https://github.com/Danmazda/api-nest-tapiocaria.git\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodAPI docs\nhttps://api-nest-tapiocaria-production.up.railway.app/api/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TableModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_TableModule\n\n\n\ncluster_TableModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nOrderModule -->\n\nPrismaModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nTableModule\n\nTableModule\n\nTableModule -->\n\nPrismaModule->TableModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nTableModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nTableService\n\nTableService\n\nTableModule -->\n\nTableService->TableModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
